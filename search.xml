<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python爬虫教程</title>
      <link href="/%E6%95%99%E7%A8%8B/python.html"/>
      <url>/%E6%95%99%E7%A8%8B/python.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大家好，我是唐朝飞鱼，这是本站的第一篇技术教程，非常高兴能在这里给大家分享爬虫的相关知识，因为爬虫与反爬虫技术在实践中不断升级，因此本站也会不断更新教程。如果喜欢本站，请关注、分享本站，如果对您有所帮助，可以请我喝一杯咖啡，谢谢。</p><h1 id="爬虫的前世今生"><a href="#爬虫的前世今生" class="headerlink" title="爬虫的前世今生"></a>爬虫的前世今生</h1><h2 id="爬虫的前世"><a href="#爬虫的前世" class="headerlink" title="爬虫的前世"></a>爬虫的前世</h2><h3 id="谷歌"><a href="#谷歌" class="headerlink" title="谷歌"></a>谷歌</h3><p>1998年9月谷歌公司成立，1999年谷歌公司网站上线运营。<br>谷歌瞄准了互联网不断增长，信息进入爆炸时代。<br>如何帮助用户寻找有效信息，谷歌根据当前市场，提前瞄准市场的机遇，通过广告收入完成盈利。<br>谷歌使用的技术就是爬虫技术，从海量的互联网站搜索网站，并索引、根据用户喜爱程度进行排名及付费排名。</p><h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><p>2000年前，互联网上的资源信息较少，只有很少的搜狐、网易、中华网。<br>1999年身在美国硅谷的李彦宏看到了中国互联网及中文搜索引擎服务的巨大发展潜力，既然美国有谷歌，中国应该有百度。<br>百度取名来源于，辛弃疾的众里寻他千百度。<br>如何索引中国文字信息，并且快速、有效的提供给客户是那个时代百度的使命。</p><h3 id="hao123"><a href="#hao123" class="headerlink" title="hao123"></a>hao123</h3><p>搜索引擎出现之前，在中国互联网上的IE默认主页就是hao123，hao123搜集整理了很多优秀的网站，并且按照功能分类，提供了互联网的入口。</p><h2 id="爬虫的今生"><a href="#爬虫的今生" class="headerlink" title="爬虫的今生"></a>爬虫的今生</h2><h3 id="旧时代逝去"><a href="#旧时代逝去" class="headerlink" title="旧时代逝去"></a>旧时代逝去</h3><p>2000年-2010年，网站蓬勃发展，搜索引擎也在快速壮大，如何获取好的排名，利用SEO结合搜索引擎的特点提升网站排名，让很多垃圾站点位居排名前列。<br>谷歌和百度都在优化算法，改变权重，期待较好的用户体验。然而公司终究是盈利的，广告排名竞价机制的高成本，让小企业难以为继。<br>高利润企业上竞价排名，低利润上SEO。中国互联网群魔乱舞，搜索到的信息终究不是自己想要的。<br>在今天人们已经有限度的使用搜索引擎，让搜索引擎服务商也是想尽了办法。<br>谷歌资助了很多开源项目，培养了很多优秀的人才。<br>百度则是利用搜索引擎的垄断地位，利用新闻、资讯、贴吧来圈住用户。<br>让人感到不满的是，手机的快速发展，电脑端在迅速消退，百度强制使用搜索，要下载APP，让一些人感到吃了苍蝇。<br>特别是莆田医院的事故，让人从内心抵制百度，这家企业是否严重的背离了价值观或者说根本就没有价值观。李彦宏就是个商人，百度就是依赖代理商高返点生存。<br>我讨厌谷歌和百度！讨厌搜索到的内容充满了虚假信息、病毒木马。</p><h3 id="新时代"><a href="#新时代" class="headerlink" title="新时代"></a>新时代</h3><p>按需定制自己需要的信息，2009年中国出现了火车头采集器。这种采集让互联网抄袭成为了一种常态。前篇一律的文章和抄袭，互联网创新在减少。<br>2015年国内的技术大拿就开始研究python了，python像病毒一样得到了快速发展。数据挖掘的资深人士可以取得数据科学家的称号。</p><p>要学爬虫，首推的就是 Python 语言，简单快速易上手，且 Python 语言的爬虫生态极其丰富。</p><p>我个人于 2015 年研究 Python 爬虫技术，并于 2018 年出版了个人第一版爬虫书《Python3 网络爬虫开发实战》，出版至今，此本书一直处于市面上所有爬虫书的销冠位置，销量 10w 册，豆瓣评分 9.0。</p><p>Python 爬虫技术的基本内容包括网页基础分析、requests 请求、XPath 和正则解析、Ajax 分析、Selenium 模拟浏览器爬取、Scrapy 等知识点，但技术不是一成不变的，随着近几年时代的发展，一些新兴爬虫技术如异步爬虫、JavaScript 逆向、AST 技术、安卓逆向、Hook、智能解析、WebAssembly、大规模分布式、Docker、Kubernetes 等技术不断涌现，而现在网上的爬虫文章也存在着极大问题，一个是内容泛滥不堪、同质化严重，另一个是几乎没有几篇博文能紧跟前沿技术，多数还停留在几年前的水平，而且很多爬虫教程所用案例已经非常老旧而且多数也无法运行，这极大地打击了初学者的自信心。</p><p>因此，2022 年了，有一套内容全面的、紧跟前沿技术的、案例稳定运行的爬虫教程可谓是非常难得。</p><p>是的，所以在 2021 年底，我又出版了《Python3 网络爬虫开发实战（第二版）》，对旧的爬虫技术内容进行了全面更新，搭建了全新的案例平台进行全面讲解，</p><p>目前截止 2022 年，可以将爬虫基本技术进行系统讲解，同时将最新前沿爬虫技术如异步、JavaScript 逆向、AST、安卓逆向、Hook、智能解析、群控技术、WebAssembly、大规模分布式、Docker、Kubernetes 等，市面上目前就这一套教程了，当然书的话也仅有《Python3 网络爬虫开发实战（第二版）》可以做到。</p><p>本教程内容多数来自于《Python3 网络爬虫开发实战（第二版）》，本教程对书中内容进行了精简和梳理，尽量覆盖到最新的知识点，当然更全面的内容可以购买《Python3 网络爬虫开发实战（第二版）》一书了解更多。</p><p>以下为 Python3 网络爬虫学习教程内容：</p><p>爬虫基础入门<br>什么是爬虫？<br>HTTP 基本原理<br>Web 网页基础<br>Session 和 Cookie<br>urllib 爬虫初体验<br>方便好用的 requests<br>强大灵活的正则表达式<br>基础爬虫案例爬取实战<br>页面解析和数据存储<br>网页解析利器 XPath 初体验<br>新兴网页解析利器 parsel<br>简易的 TXT 纯文本文件存储<br>方便灵活的 JSON 文本文件存储<br>高效实用的 MongoDB 文档存储<br>关系型数据库 MySQL 存储<br>当爬虫遇见 RabbitMQ 消息队列<br>便于高效检索的 Elasticsearch 存储<br>Ajax 分析和动态渲染页面爬取<br>什么是 Ajax？<br>Ajax 分析方法<br>Ajax 案例爬取实战<br>经典动态渲染工具 Selenium 的使用<br>新兴动态渲染工具 Playwright 的使用<br>异步爬虫和模拟登录<br>协程的基本原理<br>aiohttp 的基本使用<br>模拟登录的基本原理<br>Session + Cookie 模拟登录爬取实战<br>验证码的处理<br>OCR 识别验证码<br>OpenCV 图像匹配识别滑动验证码缺口<br>深度学习识别滑动验证码缺口<br>代理的使用<br>代理的基本原理<br>代理的基本使用<br>高效代理池的维护<br>ADSL 拨号代理的使用<br>JavaScript 混淆、逆向技术<br>JavaScript 网站加密和混淆技术简介<br>JavaScript 逆向调试技巧<br>JavaScript Hook 的用法<br>Python 模拟执行 JavaScript<br>App 爬虫和安卓逆向<br>页面智能解析<br>Scrapy 框架和分布式爬虫<br>爬虫的部署、维护、监控</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
